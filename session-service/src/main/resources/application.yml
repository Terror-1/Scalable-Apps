# spring:
#     application:
#       name: session-service
#     config:
#       import: optional:configserver:http://localhost:8888

eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

server:
  port: 8030

spring:
  kafka:
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      bootstrap-servers: localhost:9092
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: "*"

      emptyCart:
        group-id: emptyCart
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      addToCart:
        group-id: addToCart
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      login:
        group-id: login
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      logout:
        group-id: logout
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      removeFromCart:
        group-id: removeFromCart
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  application:
    name: session-service

  cassandra:
    keyspace-name: store
    local-datacenter: datacenter1
  data:
    cassandra:
      schema-action: CREATE_IF_NOT_EXISTS
stripe:
  secret:
    key: sk_test_51P9U3gRqvM61FDTxZlRrikPCKSEpqVCwWnONVdlh5GtNOUDRvhRIQD9OpJRQuT5mLFvrnDgCPZ1CSZHy0yYUmBQU00AD4KcbO5

# Logging level
logging:
  level:
    root: INFO

# Logstash appender
logstash:
  destination: localhost:5044

#  Actuator endpoints exposure
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    metrics:
      enabled: true
