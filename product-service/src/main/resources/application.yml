eureka:
  client:
    service-url:
      defaultZone: http://discovery:8761/eureka

server:
  port: 8070

spring:
  application:
    name: product-service
  datasource:
    url: jdbc:postgresql://db-product:5432/product
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 30000
      pool-name: HikariPool-Product
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format-sql: true
    database: postgresql

  redis:
    port: 6379
    host: redis
  main:
    allow-bean-definition-overriding: true

  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      bootstrap-servers: localhost:29092
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: "*"

      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      emptyCart:
        group-id: emptyCart
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      reviewNotification:
        group-id: emptyCart
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      addToCart:
        group-id: addToCart
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      checkCart:
        group-id: checkCart
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

    producer:
      bootstrap-servers: localhost:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  cassandra:
    keyspace-name: store
    local-datacenter: datacenter1
    contact-points: localhost
    port: 9042
  data:
    cassandra:
      schema-action: CREATE_IF_NOT_EXISTS
    elasticsearch:
      cluster-name: elasticsearch
      cluster-nodes: elasticsearch:9200
      repositories:
        enabled: true

stripe:
  secret:
    key: sk_test_51P9U3gRqvM61FDTxZlRrikPCKSEpqVCwWnONVdlh5GtNOUDRvhRIQD9OpJRQuT5mLFvrnDgCPZ1CSZHy0yYUmBQU00AD4KcbO5


# Logging level
logging:
  level:
    root: INFO

# Logstash appender
logstash:
  enabled: true
  appender:
    destination: ${LOGSTASH_HOST}:${LOGSTASH_PORT}
#  Actuator endpoints exposure
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    metrics:
      enabled: true